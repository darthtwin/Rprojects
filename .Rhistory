install.packages(c("AER", "car", "sandwich", "tseries", "purrr", "rvest", "tidyverse", "dplyr", "forcats", "stargazer", "xml2"))
install.packages("AER")
install.packages("car")
install.packages("car")
install.packages("AER")
install.packages("xml2")
install.packages("xml2")
install.packages("EconDemand")
devtools::install_github("R-CoderDotCom/econocharts")
install.packages(c("robotstxt", "stringr"))
install.packages("~/Downloads/gEcon_1.2.0.tar.gz", repos = NULL, type = "source")
install.packages("nleqslv")
install.packages("~/Downloads/gEcon_1.2.0.tar.gz", repos = NULL, type = "source")
install.packages(c("dygraphs", "xtable", "officer"))
install.packages("fredr")
install.packages("addinslist")
addinslist:::addinslistAddin()
install.packages(c("dbplyr", "parallelly", "sp"))
devtools::install_github("SebastianBehrens/SolowVariants", build_vignettes = T)
library(SolowVariants)
vignette("SolowVariants")
install.packages("httpgd")
install.packages("httpgd")
install.packages(c("AER", "broom", "car", "DBI", "dbplyr", "globals", "officer", "processx", "R.utils", "rlang", "sandwich", "tinytex"))
rstudioapi::addTheme("https://raw.githubusercontent.com/cobriant/vaporwave.rstheme/main/vaporwave.rstheme", apply = TRUE)
rstudioapi::addTheme("https://raw.githubusercontent.com/jnolis/synthwave85/master/Synthwave85.rstheme", TRUE, TRUE, FALSE)
rstudioapi::addTheme("https://raw.githubusercontent.com/roshandarji/synthwaveBLACK/master/SynthwaveBlack.rstheme", TRUE, TRUE, FALSE)
addTheme("https://raw.githubusercontent.com/AlessioMR/matrix_glow/master/matrix_glow.rstheme", apply = TRUE )
library(tinytex)
library(urca)
library(vars)
library(mFilter)
library(tseries)
library(TSstudio)
library(forecast)
library(tidyverse)
macro <- read.csv("~/Documents/Rprojects/svardata.csv")
head(macro)
y <- ts(macro$output_gap, start = c(2000,1,1), frequency = 4)
pi <- ts(macro$core_cpi, start = c(2000,1,1), frequency = 4)
r <- ts(macro$fed_funds_rate, start = c(2000,1,1), frequency = 4)
ts_plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
ts_plot(r, title = "Federal Funds Rate", Xtitle = "Time", Ytitle = "FFR")
amat <- diag(3)
amat
macro <- read.csv("~/Documents/Rprojects/svardataex.csv")
head(macro)
y <- ts(macro$output_gap, start = c(2000,1,1), frequency = 4)
pi <- ts(macro$core_cpi, start = c(2000,1,1), frequency = 4)
r <- ts(macro$fed_funds_rate, start = c(2000,1,1), frequency = 4)
ts_plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
ts_plot(r, title = "Federal Funds Rate", Xtitle = "Time", Ytitle = "FFR")
macro <- read.csv("~/Documents/Rprojects/svardataex.csv", header = TRUE)
head(macro)
y <- ts(macro$output_gap, start = c(2000,1,1), frequency = 4)
pi <- ts(macro$core_cpi, start = c(2000,1,1), frequency = 4)
r <- ts(macro$fed_funds_rate, start = c(2000,1,1), frequency = 4)
ts_plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
ts_plot(r, title = "Federal Funds Rate", Xtitle = "Time", Ytitle = "FFR")
svardataex <- read.csv("~/Documents/Rprojects/svardataex.csv")
View(svardataex)
y <- ts(macro$output_gap, start = c(2000,1,1), frequency = 4)
macro <- read.csv("~/Documents/Rprojects/svardataex.csv")
svardataex <- read.csv("~/Documents/Rprojects/svardataex.csv")
View(svardataex)
library(readr)
svardataex <- read_csv("svardataex.csv",
col_types = cols(DATE = col_date(format = "%Y-%m-%d"),
output_gap = col_double(), core_cpi = col_double()))
View(svardataex)
macro <- read.csv("~/Documents/Rprojects/svardataex.csv")
View(macro)
library(readr)
svardataex <- read_csv("svardataex.csv",
col_types = cols(output_gap = col_number(),
core_cpi = col_number()))
View(svardataex)
library(readr)
macro <- read_csv("svardataex.csv", col_types = cols(output_gap = col_number(),
core_cpi = col_number()))
View(macro)
macro <- read.csv("~/Documents/Rprojects/svardataex.csv")
macro <- read.csv("~/Documents/Rprojects/svardataex.csv")
head(macro)
y <- ts(macro$output_gap, start = c(2000,1,1), frequency = 4)
pi <- ts(macro$core_cpi, start = c(2000,1,1), frequency = 4)
r <- ts(macro$fed_funds_rate, start = c(2000,1,1), frequency = 4)
ts_plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
ts_plot(r, title = "Federal Funds Rate", Xtitle = "Time", Ytitle = "FFR")
y <- ts(macro$output_gap, start = c(1970,1,1), frequency = 4)
pi <- ts(macro$core_cpi, start = c(1970,1,1), frequency = 4)
r <- ts(macro$fed_funds_rate, start = c(1970,1,1), frequency = 4)
ts_plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
ts_plot(r, title = "Federal Funds Rate", Xtitle = "Time", Ytitle = "FFR")
amat <- diag(3)
amat
amat[2,1] <- NA
amat[3,1] <- NA
amat[3,2] <- NA
amat
svar1 <- cbind(y, pi, r)
colnames(svar1) <- cbind(“Output Gap”, “CPI”, “FFR”)
colnames(svar1) <- cbind(“OutputGap”, “CPI”, “FFR”)
colnames(svar1) <- c('OutputGap', 'CPI', 'FFR')
View(svar1)
lagselect <- VARselect(svar1, lag.max = 8, type = "both")
lagselect$selection
lagselect$criteria
varmodel1 <- VAR(svar1, p = 5, season = NULL, exog = NULL, type = "const")
View(varmodel1)
View(varmodel1)
varmodel1
svarmodel1 <- SVAR(varmodel1, Amat = amat, Bmat = NULL, hessian = TRUE, estmethod =
c("scoring", "direct"))
SVARMod1
svarmodel1
head(svar1)
View(svar1)
View(svar1)
svarog <- irf(svarmodel1, impulse = "OutputGap", response = "OutputGap")
svarog
plot(svarog)
svarinf <- irf(svarmodel1, impulse = "OutputGap", response = "CPI")
svarinf
plot(svarinf)
svarffr <- irf(svarmodel1, impulse = "CPI", response = "FFR")
svarffr
plot(svarffr)
plot(svarog)
plot(svarinf)
plot(svarffr)
svarfevd <- fevd(svarmodel1, n.ahead = 10)
svarfevd
plot(svarfevd)
plot(svarog)
plot(svarinf)
plot(svarffr)
install.packages("httpuv")
install.packages("caTools")
plot(y, title = "Output Gap", Xtitle = "Time", Ytitle = "Output Gap")
plot(y, main = "Output Gap", xlab = "Time", ylab = "Output Gap")
plot(y, main = "Output Gap", xlab = "Time", ylab = "Output Gap")
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
library(urca)
library(vars)
library(mFilter)
library(tseries)
library(TSstudio)
library(forecast)
library(tidyverse)
ts_plot(pi, title = "Inflation Rate", Xtitle = "Time", Ytitle = "CPI")
library(plotly)
